// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");

function $$eval(baseEval, expr) {
  var eval_ = function (expr_) {
    return $$eval(baseEval, expr_);
  };
  switch (expr.tag | 0) {
    case 0 : 
        return Curry._1(baseEval, expr[0]);
    case 1 : 
        return expr[0];
    case 2 : 
        return List.for_all(eval_, expr[0]);
    case 3 : 
        return List.exists(eval_, expr[0]);
    case 4 : 
        return !$$eval(baseEval, expr[0]);
    
  }
}

var Logic = /* module */[/* eval */$$eval];

var byte1 = /* :: */[
  0,
  /* :: */[
    1,
    /* :: */[
      0,
      /* :: */[
        1,
        /* :: */[
          0,
          /* :: */[
            1,
            /* :: */[
              0,
              /* :: */[
                1,
                /* [] */0
              ]
            ]
          ]
        ]
      ]
    ]
  ]
];

var byte2 = /* :: */[
  0,
  /* :: */[
    1,
    /* :: */[
      0,
      /* :: */[
        1,
        /* :: */[
          0,
          /* :: */[
            1,
            /* :: */[
              0,
              /* :: */[
                1,
                /* [] */0
              ]
            ]
          ]
        ]
      ]
    ]
  ]
];

var sixteenBits_001 = /* :: */[
  byte2,
  /* [] */0
];

var sixteenBits = /* :: */[
  byte1,
  sixteenBits_001
];

var expr1 = /* And */Block.__(2, [/* :: */[
      /* Const */Block.__(1, [true]),
      /* :: */[
        /* Const */Block.__(1, [true]),
        /* :: */[
          /* Const */Block.__(1, [false]),
          /* :: */[
            /* Const */Block.__(1, [true]),
            /* [] */0
          ]
        ]
      ]
    ]]);

function parser(base) {
  return base % 2 === 0;
}

var result1 = $$eval(parser, expr1);

console.log(result1);

exports.Logic = Logic;
exports.byte1 = byte1;
exports.byte2 = byte2;
exports.sixteenBits = sixteenBits;
exports.expr1 = expr1;
exports.parser = parser;
exports.result1 = result1;
/* result1 Not a pure module */
